%Graphical Method matlab

clc 
clear all
C=[3, 5] %---cost of LPP 
A=[1 2; 1 1; 0 1] 
B=[2000;1500;600] 

x1=0:500:max(B); 
y1=(B(1)-A(1,1)*x1)/A(1,2); 
y2=(B(2)-A(2,1)*x1)/A(2,2); 
y3=(B(3)-A(3,1)*x1)/A(3,2);

y1=max(0,y1) %first quadrant mei rakhne ke liye 
y2=max(0,y2) 
y3=max(0,y3) 
plot(x1,y1,'r',x1,y2,'g',x1,y3,'b') 

%find(y1==0)
%find(y2==0)
%find(y3==0)

c1=find(x1==0) 
cx1=find(y1==0) 
line1=[x1([c1 cx1]); y1([c1 cx1])]'

c2=find(x1==0) 
cx2=find(y2==0) 
line2=[x1([c2 cx2]);
y2([c2 cx2])]'

c3=find(x1==0) 
cx3=find(y3==0) 
line3=[x1([c3 cx3]);
y3([c3 cx3])]'

cornerpt=unique([line1;line2;line3],'rows')

pt=[0;0] 
for i=1:size(A,1) %size(A)= number of rows and column, size(A,1)= number of rows, size(A,2)= number of columns 
    for j=i+1:size(A,1) 
        A1=A([i,j],:) 
        B1=B([i,j]) 
        X=inv(A1)*B1 %element wise multiplication 
        pt=[pt,X] %pt initially khaali li thi..abb usme maine X store karwaya 
    end 
end
pt=pt' 
allptt=[pt;cornerpt] 
points=unique(allptt, 'rows')


%phase----> finding feasible region

for i = 1:size(points,1)
    constraint1(i) = A(1,1)*points(i,1) + A(1,2)*points(i,1) - B(1);
    constraint2(i) = A(2,1)*points(i,1) + A(2,2)*points(i,2) - B(2);
    constraint3(i) = A(3,1)*points(i,1) + A(3,2)*points(i,2) - B(3);
    s1 = find(constraint1>0)
    s2 = find(constraint2>0)
    s3 = find(constraint3>0)
end

s = unique([s1 s2 s3])
points(s,:) = []
value = points*C'

table = [points value]
[obj index] = max(value)

X1 = points(index,1)
X2 = points(index,2)

fprintf('obj value is %f at(%f,%f)',obj,X1,X2)
